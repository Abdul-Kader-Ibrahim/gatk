/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gatk;

import org.testng.Assert;
import org.testng.annotations.*;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import static org.testng.Assert.*;

public class AppTest {
    private static Path getRemotePath(){
        try {
            return Paths.get(new URI("gs://hellbender/test/resources/large/exampleLargeFile.txt"));
        } catch (URISyntaxException e) {
            throw new RuntimeException(e);
        }
    }

    @Test
    public void testExists() throws URISyntaxException, IOException {
        Assert.assertTrue(Files.exists(getRemotePath()));
    }

    @Test
    public void testIsRegularFile() throws URISyntaxException, IOException {
        Assert.assertTrue(Files.isRegularFile(getRemotePath()));
    }

    @Test
    public void testRead() throws URISyntaxException, IOException {
        try(InputStream inputStream = Files.newInputStream(getRemotePath())){
            Assert.assertNotEquals(inputStream.read(), - 1);
        }
    }

    @Test
    public void testGetParent(){
        getRemotePath().getParent();
    }

    @Test
    public void testPseudoDirectory(){
        Assert.assertTrue(Files.isDirectory(getRemotePath().getParent()));
    }

    @Test
    public void testCopy() throws URISyntaxException, IOException {
        final Path target = Paths.get("local.txt");
        final Path remotePath = getRemotePath();
        Files.copy(remotePath, target);
        Assert.assertEquals(Files.size(target), Files.size(remotePath));
        Files.delete(target);
    }
}
